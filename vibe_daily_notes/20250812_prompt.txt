### **오늘의 작업 요약: 웹사이트 배포 문제 해결 및 최적화**

오늘 우리는 GitHub Actions를 통해 AWS S3에 웹사이트를 배포하는 과정에서 발생한 여러 문제를 단계적으로 해결하고, 최종적으로 Vite 빌드 시스템에 맞게 프로젝트를 최적화했습니다.

---

### **1. 초기 문제: 깨진 링크와 불완전한 배포**

*   **문제 현상**:
    1.  최초 배포 후, 웹사이트의 내부 메뉴 링크들(예: `#app1`, `#app2`)이 전혀 작동하지 않았습니다.
    2.  `js` 폴더에 있는 JavaScript 파일들이 S3 버킷에 배포되지 않은 것이 확인되었습니다.

*   **일차적인 원인 분석**:
    *   GitHub Actions 워크플로우(`deploy_old.yml`)가 프로젝트를 빌드(`npm run build`)하고 그 결과물(`dist` 폴더)만 배포하도록 설정되어 있었습니다. 하지만 이 과정에서 무언가 잘못되어 필수 파일들이 누락된 것으로 추정되었습니다.

*   **사용자의 임시 해결책**:
    *   문제를 해결하기 위해 `npm run build` 과정을 생략하고, 프로젝트의 모든 소스 코드를 직접 S3에 동기화하는 새로운 `deploy.yml`을 작성하셨습니다. 이는 일시적으로 파일들을 S3에 올릴 수는 있었지만, 근본적인 문제를 해결하지는 못했습니다.

---

### **2. 첫 번째 해결 단계: 배포 워크플로우(CI/CD) 수정**

*   **문제점 진단**:
    *   소스 코드를 그대로 배포하는 것은 웹사이트 성능(파일 최적화 부재)과 보안(설정 파일 노출)에 심각한 문제를 야기하므로 권장되지 않는 방식입니다.
    *   올바른 접근법은 `npm run build`를 통해 최적화된 결과물만 배포하는 것입니다.

*   **수행한 작업**:
    1.  **워크플로우 재구성**: `deploy.yml` 파일을 표준적인 `빌드 -> 배포` 방식으로 수정했습니다. 이 워크플로우는 `npm install`, `npm run build`를 실행한 뒤, 생성된 `dist` 폴더의 내용만 S3에 업로드하도록 설정되었습니다.
    2.  **설정 파일 정리**: 사용하지 않는 배포 파일들(`deploy_old.yml`, `deploy_gpt.yml`)이 GitHub에 올라가지 않도록 `.gitignore`에 추가했습니다.

---

### **3. 두 번째 문제: Vite 빌드 설정의 근본적인 오해**

*   **문제 현상**:
    *   올바른 배포 워크플로우를 적용했음에도 불구하고, 배포된 사이트에는 여전히 `index.html`과 이미지 파일들만 있었고, JS/CSS 파일은 누락되어 링크는 계속 작동하지 않았습니다.

*   **근본 원인 진단**:
    *   문제는 배포 과정이 아닌, **Vite 빌드 프로세스 자체**에 있었습니다.
    *   프로젝트의 `index.html`이 `<script src="..."></script>` 와 같이 전통적인 방식으로 JS/CSS를 로드하고 있었습니다.
    *   Vite는 `index.html`에 `<script type="module" src="..."></script>` 와 같이 모듈 방식으로 선언된 진입점을 기준으로 모든 JS와 CSS의 의존성을 분석하고 묶어서 빌드합니다. 현재 구조에서는 Vite가 어떤 JS/CSS를 빌드에 포함해야 할지 전혀 인지하지 못했던 것입니다.

*   **수행한 작업**:
    1.  **프로젝트 구조 리팩토링**: 프로젝트를 Vite가 이해할 수 있는 모던한 방식으로 재구성했습니다.
    2.  **진입점 통합**: 여러 JS/CSS 파일들을 `main.js`라는 단일 진입점 파일에서 `import` 하도록 통합했습니다.
    3.  **HTML 수정**: `index.html`의 모든 `<script>`와 `<link>` 태그를 제거하고, 통합된 `main.js`를 가리키는 `<script type="module" src="/main.js"></script>` 한 줄만 남겼습니다.

---

### **4. 세 번째 문제: 배포 환경에서의 경로 해석 오류**

*   **문제 현상**:
    *   Vite 빌드까지 완벽하게 수정했음에도, 배포된 사이트의 링크는 여전히 작동하지 않았습니다.
    *   사용자께서 제공해주신 S3 버킷의 실제 내용(`S3_Buckets` 폴더)을 분석한 결과, JS/CSS 파일은 정상적으로 빌드 및 업로드되었음을 확인했습니다.

*   **최종 원인 진단**:
    *   배포된 `index.html`을 분석한 결과, Vite가 생성한 JS/CSS 파일의 경로가 `/assets/index-....js` 와 같이 **절대 경로**로 되어 있었습니다.
    *   S3 정적 웹사이트 호스팅의 기본 설정에서는, 브라우저가 이 절대 경로를 올바르게 해석하지 못해 파일을 찾지 못하는 문제가 발생합니다.

*   **최종 해결책**:
    1.  **Vite 설정 파일 추가**: 프로젝트 루트에 `vite.config.js` 파일을 생성했습니다.
    2.  **상대 경로 빌드 설정**: 해당 파일에 `base: './'` 옵션을 추가하여, Vite가 모든 파일 경로를 `./assets/index-....js` 와 같은 **상대 경로**로 생성하도록 강제했습니다.
    3.  **`.gitignore` 업데이트**: 분석용으로 사용한 `S3_Buckets` 폴더를 `.gitignore`에 추가했습니다.

### **결론**

최종적으로 `vite.config.js`를 포함한 수정사항을 배포한 후, `index.html`은 올바른 상대 경로로 JS/CSS를 참조하게 되었고, 브라우저가 모든 파일을 정상적으로 로드하여 내부 링크를 포함한 웹사이트의 모든 기능이 완벽하게 작동하게 되었습니다.

오늘의 작업은 단순한 오류 수정이 아니라, **모던 웹 개발의 빌드 시스템을 이해하고 그에 맞게 프로젝트 구조를 최적화하는 중요한 과정**이었습니다.